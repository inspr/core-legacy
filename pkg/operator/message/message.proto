// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "google.golang.org/grpc/examples/helloworld/helloworld";
option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

package comunication;

// The message broker service definition.
service Operator {
  // Open the connection for message broker operation
  rpc OpenConnection (stub) returns (messageReply) {}

  // Reads a message from message broker operation
  rpc ReadNextMessageFrom (channelID) returns (messageReply) {}

  // PWrite a message into our message broker
  rpc WriteMessageAt (channel) returns (messageReply) {}

  // Closes the connection with the message broker
  rpc CloseConnection (stub) returns (messageReply) {}
}

// A stub message to search data
message stub {}

// The request message containing the Channel description and its ID
message messageFrom {
    string name = 1;
    string channelDescription = 2;
}

// The request message containing and array of Channel description
message messageTo {
    string channelDescription = 1;
}

// The response message containing the response
message messageReply {
    string error = 1;
    string value = 2;
}
